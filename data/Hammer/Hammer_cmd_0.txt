local t =
{
	Atk_Std1C = { command = ["1+C"], },
	//Atk_Std2C = {},
	Atk_Std3C = {},
	Atk_Std4C = {},
	Atk_StdC = {},
	Atk_Std6C = {},
	Atk_Std7C = {},
	Atk_Std8C = {},
	Atk_Std9C = {},
	
	Skill_623A = {},
	Skill_623B = {},
	Skill_623EX = {},
	
	Skill_41236SP_ABC = {},
	Skill_41236SP = {},
	
	Atk_StdBandC = {},
	
	// Atk_Air1C = {},
	// Atk_Air2C = {},
	// Atk_Air3C = { 
		// num = def_CN_AtkJ3C, name = "Cmd_Atk_Air3C", command = "3+C", posstatus = _PosState_Air, flags = [ "lastdelay","airskill" ],
		// CmdCheck = { SkillType = "Normal", PosState = "Air",  /*ComboLimit = DEF_BS_CL_ATKJ6C,*/ },
		// CmdAfterStdFunc = function()
		// {
			// local pos = BMvTbl.GetPosition();
			// local vec = BMvTbl.GetVector(0);
			// if( pos.y + vec.y >= 0 ) return 0;
			// if( BMvTbl.CheckCommand( [def_CN_Atk_DashStdC_Direct] ) )
			// {
				// if( pos.y + (vec.y*3) >= 0 ) return 0;
			// }
			// if( !Battle_Std.CheckEnableFlag_AssaultAirC() ) return 0;
			// return 1;
		// },
		// UpdateTable = { name = "Mv_Atk_Air3C", }
	// },
	// Atk_Air4C = {},
	// Atk_AirC = {},
	Atk_Air6C = {},
	// Atk_Air7C = {},
	// Atk_Air8C = {},
	// Atk_Air9C = {},
	Skill_63214EX = {    
        usegauge = 10000,
        CmdCheck = { Cost = { ComboGauge = 10000 }, SkillType = "ExSpecial" },
	},
	
	
	
	Skill_Romantic = {
		cmdtmplflags = Def_SCT_Common, name = "Cmd_Romantic", command = ["A+B+D","A+C+D","B+C+D"], usegauge = 10000, flags = [ "lastdelay" ], posstatus = _PosState_Always,
		CmdCheck = { Cost = { ComboGauge = 10000 }, SkillType = "ExSpecial",  PosState = "Always", },	
		// CmdBeforeStdFunc = function()
		// {
			// if(	Battle_Std.CheckExSpecialCancel() == 0 &&
				// BCMDTbl.CheckCancel( _SkillType_ChainShift ) == 0 ) return 0;

			// if(	Battle_Std.CheckExSpecialCancel() == 0 && BCMDTbl.CheckCancel( _SkillType_ChainShift ) )
			// {
				// if( Battle_Std.MoveCodeEx.CheckFlag( 1, def_MC1_ChainShiftOK ) )
				// {

				// }
				// else if( Battle_Std.MoveCodeEx.CheckFlag( 1, def_MC1_GuardChainShiftOK ) && ( BMvTbl.GetMvHitStatus().Type & _HitType_Hit ) )
				// {
				// }
				// else
				// {
					// if( !Battle_Std.CheckEnemyisDamage() ) return 0;
				// }
			// }

			// if( Battle_Std.IsMatchMvNameArray( ["Mv_Assault_Std","Mv_Assault_Air"] ) )
			// {
				// if( BMvTbl.AddAirCount( def_AC_Assault, 0 ) >= 1 ) return 0;
			// }
			
			// return 1;
		// }	
		UpdateTable = { name = "Mv_Skill_Romantic", }
	},	
	Skill_236EX = {},
	
}

//Check and Reset are the same thing, Mv and Tmpl
//UpdateMoveName appears when CheckMoveName
local ar =
[
	{
		CheckMoveName="Mv_Atk_StdA",
		UpdateMoveName="Mv_Atk_StdB",
	},
	{
		ResetTmplName="Atk_StdB",
		CheckMoveName="Mv_Atk_StdB",
		UpdateMoveName="Mv_Atk_Std6B",
	},
	{
		ResetTmplName="Atk_Std6B",
		CheckMoveName="Mv_Atk_Std6B",
		UpdateMoveName="Mv_Atk_StdC",
	},
	{
		ResetTmplName="Atk_StdC",
		CheckMoveName="Mv_Atk_StdC",
		UpdateMoveName="Mv_Skill_SSRelayAtk",
		CmdCheck = 
		{
			SkillType = "AddCommand",
			FrameIDCheck = { Only = [900,910] },
		}
		CmdTmplFlags=def_CMDFlags_AnnounceSmaetSteer, //スマートステアアナウンスの追加
	},
	{
		CheckMoveName="Mv_Skill_SSRelayAtk",
		UpdateMoveName="Mv_Skill_41236SP",
		CmdCheck = 
		{
			Cost = { ComboGauge = 20000 },
			SkillType = "SpSpecial",
			HitStatus="Damage",
		}
	},
]

Battle_Std.MakeStdCombo( t, ar );

HAMMER_CommandTable <- Battle_Std.MakeCommandTable( { command=t } );
